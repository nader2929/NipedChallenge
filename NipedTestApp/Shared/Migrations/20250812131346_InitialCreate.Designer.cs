// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shared;

#nullable disable

namespace Shared.Migrations
{
    [DbContext(typeof(NipedDbContext))]
    [Migration("20250812131346_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.DataModels.Bloodwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BloodPressureDiastolic")
                        .HasColumnType("integer");

                    b.Property<int>("BloodPressureSystolic")
                        .HasColumnType("integer");

                    b.Property<int>("BloodSugar")
                        .HasColumnType("integer");

                    b.Property<int>("CholesterolHdl")
                        .HasColumnType("integer");

                    b.Property<int>("CholesterolLdl")
                        .HasColumnType("integer");

                    b.Property<int>("CholesterolTotal")
                        .HasColumnType("integer");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Bloodworks");
                });

            modelBuilder.Entity("Shared.DataModels.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Shared.DataModels.Guideline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NeedsAttention")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Optimal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeriousIssue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.ToTable("Guidelines");
                });

            modelBuilder.Entity("Shared.DataModels.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DietQuality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExerciseWeeklyMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("SleepQuality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StressLevels")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Shared.DataModels.Bloodwork", b =>
                {
                    b.HasOne("Shared.DataModels.Client", "Client")
                        .WithMany("Bloodworks")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Shared.DataModels.Questionnaire", b =>
                {
                    b.HasOne("Shared.DataModels.Client", "Client")
                        .WithMany("Questionnaires")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Shared.DataModels.Client", b =>
                {
                    b.Navigation("Bloodworks");

                    b.Navigation("Questionnaires");
                });
#pragma warning restore 612, 618
        }
    }
}
